---
// Blog Tag Page
// ------------
// Description: The blog tag page.

// Components
// - Layout
import Layout from '../../../layouts/Layout.astro'
// - UI
import Hero from '../../../components/blocks/hero/PageHeader.astro'
import BlogPosts from '../../../components/blocks/blog/BlogPosts.astro'

// WordPress GraphQL Client
import WordPressGraphQLClient from '../../../lib/wordpress.js'

// Define types for WordPress category and post data
interface WordPressCategory {
  slug: string;
  name: string;
  description?: string;
}

interface WordPressPost {
  slug: string;
  title: string;
  excerpt: string;
  date: string;
  featuredImage?: {
    node?: {
      sourceUrl?: string;
    };
  };
  author?: {
    node?: {
      name?: string;
    };
  };
}

// Enable prerendering for static builds
export const prerender = true;

// Get all categories for static paths
export async function getStaticPaths() {
	const client = new WordPressGraphQLClient();
	const response = await client.getAllCategories();
	const categories = response.categories.nodes;

	return categories.map((category: WordPressCategory) => {
		return {
			params: { tag: category.slug },
			props: { category }
		}
	})
}

const { tag } = Astro.params
const { category } = Astro.props as { category: WordPressCategory }

// Fetch posts for this category
const client = new WordPressGraphQLClient();
const response = await client.getCategoryPosts(tag, 12);
const posts = response.category.posts.nodes.map((post: WordPressPost) => ({
  id: post.slug,
  data: {
    title: post.title,
    description: post.excerpt.replace(/<\/?[^>]+(>|$)/g, ""), // Strip HTML
    pubDate: new Date(post.date),
    image: post.featuredImage?.node?.sourceUrl || '/placeholder-image.jpg',
    author: post.author?.node?.name || 'WCH Team',
    tags: [category.name]
  }
}));

// Content
// - SEO
const SEO = {
	title: `WCH Learn | Posts about ${category.name}`,
	description: category.description || `Explore WCH Learn's resources about ${category.name}`
}

// - Page Header
const header = {
	title: `WCH Learn posts about <br><strong>${category.name}</strong>`,
	text: `Stay informed, stay healthy with all the latest from WCH Learn.`
}
---

<Layout title={SEO.title} description={SEO.description}>
	<Hero title={header.title} text={header.text} />
	<BlogPosts data={posts} />
</Layout>
