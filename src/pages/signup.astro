---
// Sign Up Page
// ------------
// Description: A page for users to create a new account.

export const prerender = false;

// Components
import Layout from '../layouts/Layout.astro';
import Form from '../components/ui/forms/Form.astro';
import FormField from '../components/ui/forms/partials/FormField.astro';
import InputField from '../components/ui/forms/form-elements/InputField.astro';
import Button from '../components/ui/Button.astro';
import { Icon } from 'astro-icon/components';

// Page Metadata
const title = 'Sign Up | Learn';
const description = 'Create a new Learn account to access courses and learning materials.';
---

<Layout title={title} description={description}>
  <section class="py-16 md:py-24">
    <div class="container mx-auto px-6">
      <div class="mx-auto max-w-md">
        <div class="mb-8 text-center">
          <h1 class="mb-2 text-3xl font-bold">Create an Account</h1>
          <p class="text-neutral-500 dark:text-neutral-400">Join Learn and start your learning journey today.</p>
        </div>
        
        <!-- Registration Form -->
        <div id="signup-container" class="rounded-lg border border-neutral-200 bg-white p-8 shadow-sm dark:border-neutral-800 dark:bg-neutral-900">
          <Form>
            <div id="signup-form">
              <FormField>
                <InputField type="text" id="signup-name" label="Name or Alias" required />
              </FormField>
              <FormField>
                <InputField type="email" id="signup-email" label="Email Address" required />
              </FormField>
              <FormField>
                <InputField type="password" id="signup-password" label="Password" required />
              </FormField>
              <FormField>
                <InputField type="password" id="signup-confirm-password" label="Confirm Password" required />
              </FormField>
              
              <div class="mb-6 flex items-center">
                <input
                  id="signup-terms"
                  name="terms"
                  type="checkbox"
                  required
                  class="h-4 w-4 rounded border-neutral-300 text-primary-500 focus:ring-primary-500 dark:border-neutral-700"
                />
                <label for="signup-terms" class="ml-2 block text-sm text-neutral-700 dark:text-neutral-300">
                  I agree to the <a href="/terms" class="text-primary-500 hover:text-primary-600">Terms of Service</a> and <a href="/privacy" class="text-primary-500 hover:text-primary-600">Privacy Policy</a>
                </label>
              </div>
              
              <Button style="primary" type="submit" classes="w-full" size="lg" disabled={false}>
                <span class="inline-flex items-center">
                  <span id="register-btn-text">Create Account</span>
                  <span id="register-btn-loading" class="hidden ml-2">
                    <Icon name="arrow-path-rounded-square" class="h-5 w-5 animate-spin" />
                  </span>
                </span>
              </Button>
              
              <div class="mt-6 text-center text-sm">
                <p class="text-neutral-600 dark:text-neutral-400">
                  Already have an account?
                  <a href="/signin" class="font-medium text-primary-500 hover:text-primary-600">Sign in</a>
                </p>
              </div>
            </div>
          </Form>
        </div>

        <!-- Registration Success Message (Hidden by default) -->
        <div id="registration-success" class="hidden">
          <div class="rounded-lg border border-neutral-200 bg-white p-8 shadow-sm dark:border-neutral-800 dark:bg-neutral-900 text-center">
            <div class="mb-6">
              <div class="mx-auto flex h-12 w-12 items-center justify-center rounded-full bg-green-100 dark:bg-green-900">
                <Icon name="check-circle" class="h-6 w-6 text-green-600 dark:text-green-400" />
              </div>
            </div>
            <h2 class="text-2xl font-bold mb-4">Registration Successful!</h2>
            <p class="text-lg mb-6">
              Thank you for registering! Please verify your email to continue.
            </p>
            <p class="text-neutral-600 dark:text-neutral-400 mb-8">
              We've sent a verification link to <span id="user-email" class="font-medium"></span>. 
              Please click the link to activate your account.
            </p>
            <div class="space-y-4">
              <div class="p-4 bg-neutral-50 dark:bg-neutral-800 rounded-lg">
                <h3 class="font-medium mb-2">Next steps:</h3>
                <ol class="list-decimal list-inside space-y-2 text-sm text-neutral-600 dark:text-neutral-400">
                  <li>Check your email inbox</li>
                  <li>Click the verification link</li>
                  <li>Return here to sign in</li>
                </ol>
              </div>
              <Button style="primary" size="lg" classes="w-full" link="/signin">Go to Sign In</Button>
              <p class="text-sm text-neutral-500">
                Didn't receive the email? Check your spam folder or <a href="#" class="text-primary-500 hover:text-primary-600">contact support</a>
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
</Layout>

<script>
  import { supabase } from '../lib/supabase';
  
  // Get the form elements
  const signupContainer = document.getElementById('signup-container');
  const registrationSuccess = document.getElementById('registration-success');
  const form = document.getElementById('signup-form') as HTMLDivElement;
  const submitButton = form?.querySelector('button[type="submit"]') as HTMLButtonElement;
  const btnText = document.getElementById('register-btn-text');
  const btnLoading = document.getElementById('register-btn-loading');
  const userEmailSpan = document.getElementById('user-email');
  
  // Add event listener for form submission
  if (form) {
    submitButton?.addEventListener('click', async (e) => {
      e.preventDefault();
      
      // Get form data
      const nameInput = document.getElementById('signup-name') as HTMLInputElement;
      const emailInput = document.getElementById('signup-email') as HTMLInputElement;
      const passwordInput = document.getElementById('signup-password') as HTMLInputElement;
      const confirmPasswordInput = document.getElementById('signup-confirm-password') as HTMLInputElement;
      const termsCheckbox = document.getElementById('signup-terms') as HTMLInputElement;
      
      const name = nameInput.value;
      const email = emailInput.value.trim();
      const password = passwordInput.value;
      const confirmPassword = confirmPasswordInput.value;
      
      // Basic validation
      if (!email || !password || !name) {
        alert('Please fill in all required fields');
        return;
      }
      
      if (!termsCheckbox.checked) {
        alert('You must agree to the Terms of Service and Privacy Policy');
        return;
      }
      
      if (password !== confirmPassword) {
        alert('Passwords do not match');
        return;
      }

      try {
        // Show loading state
        if (submitButton && btnText && btnLoading) {
          submitButton.disabled = true;
          btnText.textContent = 'Registering...';
          btnLoading.classList.remove('hidden');
        }
        
        // Sign up with email and password
        const { data, error } = await supabase.auth.signUp({
          email,
          password,
          options: {
            emailRedirectTo: `${window.location.origin}/dashboard`,
            data: {
              full_name: name
            }
          },
        });
        
        if (error) {
          console.error('Error signing up:', error.message);
          alert('Error signing up: ' + error.message);
          return;
        }
        
        // Check if the user was created
        if (data?.user) {
          // Display the user's email in the success message
          if (userEmailSpan) {
            userEmailSpan.textContent = email;
          }
          
          // Show success message and hide form
          if (signupContainer && registrationSuccess) {
            signupContainer.classList.add('hidden');
            registrationSuccess.classList.remove('hidden');
          }
          
          // Log for debugging
          console.log('User created successfully:', {
            id: data.user.id,
            email: data.user.email,
            emailConfirmed: data.user.confirmed_at,
            emailSent: data.user.confirmation_sent_at
          });
        } else {
          console.error('User creation failed without error');
          alert('Something went wrong. Please try again or contact support.');
        }
      } catch (error) {
        console.error('Unexpected error:', error);
        alert('An unexpected error occurred. Please try again.');
      } finally {
        // Reset button state
        if (submitButton && btnText && btnLoading) {
          submitButton.disabled = false;
          btnText.textContent = 'Create Account';
          btnLoading.classList.add('hidden');
        }
      }
    });
  }
</script> 