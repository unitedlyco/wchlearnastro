---
// Courses Page
// ------------
// Description: A page for users to browse all available courses.

// Force server-side rendering
export const prerender = false;

// Components
import Layout from '../../layouts/Layout.astro';
import { Icon } from 'astro-icon/components';
import Button from '../../components/ui/Button.astro';

// Services
import { getAllCourses, getAllCategories } from '../../lib/courses';
import type { Course, CourseCategory } from '../../types/courses';

// Helper function for server-side logging
function logToTerminal(message: string, data?: any) {
  const timestamp = new Date().toISOString();
  console.log('\x1b[34m%s\x1b[0m', `[${timestamp}] ðŸ“š Courses: ${message}`);
  if (data) {
    console.log('\x1b[33m%s\x1b[0m', JSON.stringify(data, null, 2));
  }
}

// Get user from locals (set by middleware)
const { user, session } = Astro.locals;

// Log authentication state
logToTerminal('Authentication state', {
  hasUser: !!user,
  hasSession: !!session,
  userId: user?.id,
  email: user?.email
});

// Fetch courses and categories
const [courses, categories] = await Promise.all([
  getAllCourses(),
  getAllCategories()
]);

// Log fetched data for debugging
logToTerminal('Fetched courses', { count: courses.length, courses });
logToTerminal('Fetched categories', { count: categories.length, categories });

// Page Metadata
const title = 'Courses | Learn';
const description = 'Browse our collection of courses to enhance your knowledge and skills.';
---

<Layout title={title} description={description}>
  <div class="container mx-auto px-4 py-12">
    <!-- Hero Section -->
    <div class="bg-gradient-to-r from-primary-600 to-primary-800 rounded-2xl p-8 mb-12 text-white">
      <div class="max-w-3xl">
        <h1 class="text-3xl md:text-4xl font-bold mb-4">Expand Your Knowledge</h1>
        <p class="text-lg mb-6 text-white/90">
          Discover our comprehensive collection of courses designed to help you grow personally and professionally.
        </p>
        <div class="flex flex-wrap gap-4">
          <Button link="#categories" style="primary" size="lg">
            Browse Categories
          </Button>
          <Button link="#all-courses" style="primary" variation="outline" size="lg" classes="text-white border-white hover:bg-white/10">
            View All Courses
          </Button>
        </div>
      </div>
    </div>

    <!-- Debug Info (Remove in production) -->
    <div class="bg-yellow-100 dark:bg-yellow-900 p-4 mb-8 rounded-lg">
      <h2 class="text-lg font-bold mb-2">Debug Information</h2>
      <p>Courses: {courses.length}</p>
      <p>Categories: {categories.length}</p>
      {courses.length === 0 && categories.length === 0 && (
        <p class="text-red-600 dark:text-red-400 font-bold mt-2">
          No data found. Make sure you've executed the SQL script in Supabase.
        </p>
      )}
    </div>

    <!-- Categories Section -->
    <section id="categories" class="mb-16">
      <div class="flex items-center justify-between mb-8">
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white">Course Categories</h2>
        <Button link="/courses/categories" style="primary" variation="outline" size="sm">
          View All Categories
        </Button>
      </div>

      {categories.length > 0 ? (
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
          {categories.map((category: CourseCategory) => (
            <a href={`/courses/categories/${category.slug}`} class="block group">
              <div class="bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 overflow-hidden shadow-sm group-hover:shadow-md transition-shadow duration-200">
                <div class="aspect-video bg-gray-100 dark:bg-gray-700 relative overflow-hidden">
                  {category.image ? (
                    <img 
                      src={category.image} 
                      alt={category.name} 
                      class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                    />
                  ) : (
                    <div class="w-full h-full flex items-center justify-center">
                      <Icon name="mdi:folder-outline" class="w-12 h-12 text-gray-400 dark:text-gray-500 group-hover:scale-110 transition-transform duration-300" />
                    </div>
                  )}
                  <div class="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent"></div>
                  <div class="absolute bottom-0 left-0 right-0 p-4">
                    <h3 class="text-lg font-medium text-white">{category.name}</h3>
                  </div>
                </div>
              </div>
            </a>
          ))}
        </div>
      ) : (
        <div class="bg-gray-50 dark:bg-gray-800 p-8 rounded-xl text-center">
          <Icon name="mdi:folder-outline" class="w-12 h-12 text-gray-400 mx-auto mb-4" />
          <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-2">No Categories Found</h3>
          <p class="text-gray-500 dark:text-gray-400">Check back soon for new course categories.</p>
        </div>
      )}
    </section>

    <!-- Featured Courses Section -->
    <section class="mb-16">
      <div class="flex items-center justify-between mb-8">
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white">Featured Courses</h2>
      </div>

      {courses.length > 0 ? (
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {courses.filter((course: Course) => course.is_free).slice(0, 3).map((course: Course) => (
            <div class="bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 overflow-hidden shadow-sm hover:shadow-md transition-shadow duration-200">
              <div class="aspect-video bg-gray-100 dark:bg-gray-700 relative overflow-hidden">
                {course.image ? (
                  <img 
                    src={course.image} 
                    alt={course.title} 
                    class="w-full h-full object-cover"
                  />
                ) : (
                  <div class="w-full h-full flex items-center justify-center">
                    <Icon name="mdi:book-open-page-variant" class="w-12 h-12 text-gray-400 dark:text-gray-500" />
                  </div>
                )}
                
                <!-- Level badge -->
                <div class="absolute top-3 left-3">
                  <span class={`
                    text-xs font-medium px-2 py-1 rounded-full
                    ${course.level === 'beginner' ? 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-400' : ''}
                    ${course.level === 'intermediate' ? 'bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-400' : ''}
                    ${course.level === 'advanced' ? 'bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-400' : ''}
                  `}>
                    {course.level.charAt(0).toUpperCase() + course.level.slice(1)}
                  </span>
                </div>
                
                <!-- Price badge -->
                <div class="absolute top-3 right-3">
                  <span class={`
                    text-xs font-medium px-2 py-1 rounded-full
                    ${course.is_free ? 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-400' : 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300'}
                  `}>
                    {course.is_free ? 'Free' : new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(course.price)}
                  </span>
                </div>
              </div>
              
              <div class="p-5">
                <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-2">{course.title}</h3>
                <p class="text-sm text-gray-500 dark:text-gray-400 mb-4 line-clamp-2">{course.description}</p>
                
                <div class="flex items-center text-sm text-gray-500 dark:text-gray-400 mb-4 space-x-4">
                  <div class="flex items-center">
                    <Icon name="mdi:clock-outline" class="w-4 h-4 mr-1" />
                    <span>{course.duration}</span>
                  </div>
                  <div class="flex items-center">
                    <Icon name="mdi:account" class="w-4 h-4 mr-1" />
                    <span>{course.instructor}</span>
                  </div>
                </div>
                
                <div class="flex items-center justify-between">
                  <span class="text-xs text-gray-500 dark:text-gray-400">
                    {course.categories.length > 0 ? course.categories[0] : 'General'}
                  </span>
                  
                  <Button link={`/courses/${course.slug}`} style="primary" size="sm">View Course</Button>
                </div>
              </div>
            </div>
          ))}
        </div>
      ) : (
        <div class="bg-gray-50 dark:bg-gray-800 p-8 rounded-xl text-center">
          <Icon name="mdi:book-outline" class="w-12 h-12 text-gray-400 mx-auto mb-4" />
          <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-2">No Featured Courses</h3>
          <p class="text-gray-500 dark:text-gray-400">Check back soon for featured courses.</p>
        </div>
      )}
    </section>

    <!-- All Courses Section -->
    <section id="all-courses">
      <div class="flex items-center justify-between mb-8">
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white">All Courses</h2>
        
        <!-- Filter/Sort Controls (placeholder) -->
        <div class="flex items-center space-x-2">
          <Button style="primary" variation="outline" size="sm">
            <Icon name="mdi:filter-outline" class="w-4 h-4 mr-1" />
            Filter
          </Button>
          <Button style="primary" variation="outline" size="sm">
            <Icon name="mdi:sort" class="w-4 h-4 mr-1" />
            Sort
          </Button>
        </div>
      </div>

      {courses.length > 0 ? (
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {courses.map((course: Course) => (
            <div class="bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 overflow-hidden shadow-sm hover:shadow-md transition-shadow duration-200">
              <div class="aspect-video bg-gray-100 dark:bg-gray-700 relative overflow-hidden">
                {course.image ? (
                  <img 
                    src={course.image} 
                    alt={course.title} 
                    class="w-full h-full object-cover"
                  />
                ) : (
                  <div class="w-full h-full flex items-center justify-center">
                    <Icon name="mdi:book-open-page-variant" class="w-12 h-12 text-gray-400 dark:text-gray-500" />
                  </div>
                )}
                
                <!-- Level badge -->
                <div class="absolute top-3 left-3">
                  <span class={`
                    text-xs font-medium px-2 py-1 rounded-full
                    ${course.level === 'beginner' ? 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-400' : ''}
                    ${course.level === 'intermediate' ? 'bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-400' : ''}
                    ${course.level === 'advanced' ? 'bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-400' : ''}
                  `}>
                    {course.level.charAt(0).toUpperCase() + course.level.slice(1)}
                  </span>
                </div>
                
                <!-- Price badge -->
                <div class="absolute top-3 right-3">
                  <span class={`
                    text-xs font-medium px-2 py-1 rounded-full
                    ${course.is_free ? 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-400' : 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300'}
                  `}>
                    {course.is_free ? 'Free' : new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(course.price)}
                  </span>
                </div>
              </div>
              
              <div class="p-5">
                <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-2">{course.title}</h3>
                <p class="text-sm text-gray-500 dark:text-gray-400 mb-4 line-clamp-2">{course.description}</p>
                
                <div class="flex items-center text-sm text-gray-500 dark:text-gray-400 mb-4 space-x-4">
                  <div class="flex items-center">
                    <Icon name="mdi:clock-outline" class="w-4 h-4 mr-1" />
                    <span>{course.duration}</span>
                  </div>
                  <div class="flex items-center">
                    <Icon name="mdi:account" class="w-4 h-4 mr-1" />
                    <span>{course.instructor}</span>
                  </div>
                </div>
                
                <div class="flex items-center justify-between">
                  <span class="text-xs text-gray-500 dark:text-gray-400">
                    {course.categories.length > 0 ? course.categories[0] : 'General'}
                  </span>
                  
                  <Button link={`/courses/${course.slug}`} style="primary" size="sm">View Course</Button>
                </div>
              </div>
            </div>
          ))}
        </div>
      ) : (
        <div class="bg-gray-50 dark:bg-gray-800 p-8 rounded-xl text-center">
          <Icon name="mdi:book-outline" class="w-12 h-12 text-gray-400 mx-auto mb-4" />
          <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-2">No Courses Found</h3>
          <p class="text-gray-500 dark:text-gray-400">Check back soon for new courses.</p>
        </div>
      )}
    </section>
  </div>
</Layout> 