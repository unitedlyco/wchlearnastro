---
// Blog Posts grid Section
// ------------
// Description: A grid of blog posts sorted by date in a 3 column layout.
// Properties:
// - data: An array of blog posts

// Components
// - Layout
import Section from '../../../components/ui/Section.astro'
import Row from '../../../components/ui/Row.astro'
import Col from '../../../components/ui/Col.astro'
// - UI
import Post from '../../../components/ui/cards/BlogCard.astro'
import TagNavigation from '../../../components/ui/blog/TagNavigation.astro'

// Props
const { data, isLoading = false } = Astro.props

// Function to sort posts by date
const sortedPosts = data.sort((a: any, b: any) => {
	return new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
})
---

<Section>
	<div class="blog-posts-container">
		<TagNavigation />
		
		{isLoading ? (
			<div class="loading-spinner">Loading posts...</div>
		) : (
			<div class="blog-posts-grid">
				{sortedPosts.map((post: any) => (
					<div class="blog-post-item">
						<Post
							link={`/blog/${post.id}`}
							title={post.data.title}
							subtitle={`By ${post.data.author} on ${new Date(post.data.pubDate).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}`}
							image={post.data.image}
							tags={post.data.tags}
							mobileSimplified={true}
						>
							{post.data.description}
						</Post>
					</div>
				))}
			</div>
		)}
	</div>
</Section>

<style>
	.blog-posts-container {
		@apply w-full;
	}
	
	.blog-posts-grid {
		@apply grid grid-cols-3 gap-6;
	}
	
	@media (max-width: 768px) {
		.blog-posts-grid {
			@apply grid grid-cols-2 gap-[5px];
		}
	}
</style>
